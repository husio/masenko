# Because inside of a transaction task IDs are not known, a relative position
# can be used. -1 is the index of the previously PUSHed task.
client-a send ATOMIC
client-a send PUSH {"name": "first"}
client-a send PUSH {"name": "second"}
client-a send PUSH {"name": "third", "blocked_by": [-1]}
client-a send PUSH {"name": "fourth", "blocked_by": [-3]}
client-a send DONE
client-a recv OK {"ids":[1,2,3,4]}

client-a send FETCH
client-a recv OK {"id":1,"queue":"default","name":"first"}

client-a send FETCH
client-a recv OK {"id":2,"queue":"default","name":"second"}

client-a send FETCH
client-a recv OK {"id":3,"queue":"default","name":"third"}

# Both first and second task are being processed. They are blocking two others
# from being processed.
client-a send FETCH
client-a recv OK {"id":4,"queue":"default","name":"fourth"}

client-a send ACK {"id": 1}
client-a recv OK {}

# Third task is still blocked by the second task that is in progress.
client-a send FETCH
client-a recv OK {"id":4,"queue":"default","name":"fourth"}

client-a send ACK {"id": 4}
client-a recv OK {}

client-a send FETCH
client-a recv EMPTY {}

client-a send ACK {"id": 2}
client-a recv OK {}

client-a send FETCH
client-a recv OK {"id":3,"queue":"default","name":"third"}
